import '../models/language.dart';

class LanguageConstants {
  // Available languages
  static const List<Language> languages = [
    Language(
      id: 'en',
      name: 'English',
      nativeName: 'English',
      flag: 'ЁЯЗ║ЁЯЗ╕',
      languageCode: 'en',
      countryCode: 'US',
    ),
    Language(
      id: 'hi',
      name: 'Hindi',
      nativeName: 'рд╣рд┐рдиреНрджреА',
      flag: 'я┐╜я┐╜',
      languageCode: 'hi',
      countryCode: 'IN',
    ),
    Language(
      id: 'bn',
      name: 'Bengali',
      nativeName: 'ржмрж╛ржВрж▓рж╛',
      flag: 'ЁЯЗзЁЯЗй',
      languageCode: 'bn',
      countryCode: 'BD',
    ),
    Language(
      id: 'ur',
      name: 'Urdu',
      nativeName: '╪з╪▒╪п┘И',
      flag: 'ЁЯЗ╡я┐╜',
      languageCode: 'ur',
      countryCode: 'PK',
    ),
    Language(
      id: 'pa',
      name: 'Panjabi',
      nativeName: 'рикрй░риЬри╛римрйА',
      flag: 'я┐╜я┐╜',
      languageCode: 'pa',
      countryCode: 'IN',
    ),
  ];

  // Default language
  static final Language defaultLanguage = languages[0]; // English

  // Get language by ID
  static Language? getLanguageById(String id) {
    try {
      return languages.firstWhere((lang) => lang.id == id);
    } catch (e) {
      return null;
    }
  }

  // Translation keys
  static const Map<String, Map<String, String>> translations = {
    'en': {
      'selectLanguage': 'Select Language',
      'chooseLanguage': 'Choose your preferred language for a better experience',
      'continue': 'Continue',
      'loading': 'Loading...',
    },
    'hi': {
      'selectLanguage': 'рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
      'chooseLanguage': 'рдмреЗрд╣рддрд░ рдЕрдиреБрднрд╡ рдХреЗ рд▓рд┐рдП рдЕрдкрдиреА рдкрд╕рдВрджреАрджрд╛ рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
      'continue': 'рдЬрд╛рд░реА рд░рдЦреЗрдВ',
      'loading': 'рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ...',
    },
    'bn': {
      'selectLanguage': 'ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи',
      'chooseLanguage': 'ржПржХржЯрж┐ ржнрж╛рж▓ ржЕржнрж┐ржЬрзНржЮрждрж╛рж░ ржЬржирзНржп ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржнрж╛рж╖рж╛ ржмрзЗржЫрзЗ ржирж┐ржи',
      'continue': 'ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржпрж╛ржи',
      'loading': 'рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...',
    },
    'ur': {
      'selectLanguage': '╪▓╪и╪з┘Ж ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║',
      'chooseLanguage': '╪и█Б╪к╪▒ ╪к╪м╪▒╪и█Т ┌й█Т ┘Д█М█Т ╪з┘╛┘Ж█М ┘╛╪│┘Ж╪п█М╪п█Б ╪▓╪и╪з┘Ж ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║',
      'continue': '╪м╪з╪▒█М ╪▒┌й┌╛█М┌║',
      'loading': '┘Д┘И┌И █Б┘И ╪▒█Б╪з █Б█Т...',
    },
    'pa': {
      'selectLanguage': 'ринри╛ри╕ри╝ри╛ риЪрйБригрйЛ',
      'chooseLanguage': 'римри┐ри╣ридри░ риЕриирйБринри╡ ри▓риИ риЖрикригрйА рикри╕рй░рижрйАрижри╛ ринри╛ри╕ри╝ри╛ риЪрйБригрйЛ',
      'continue': 'риЬри╛ри░рйА ри░рй▒риЦрйЛ',
      'loading': 'ри▓рйЛриб ри╣рйЛ ри░ри┐ри╣ри╛ ри╣рйИ...',
    },
  };
}
